<?xml version="1.0" encoding="UTF-8"?>
<project name="php-form" default="build" basedir=".">
    <taskdef name="readSemanticVersion" classname="vendor.setbased.phing.lib.Task.readSemanticVersionTask"/>
    <property name="BUILD_DIR" value="build"/>
    <property name ="VERSION" value="0.0.0"/>

    <target name="build" depends="prepare, copy_files"/>

    <target name="prepare">
        <echo msg="Preparing files…"/>
        <if>
            <available property="test_build_directory_exists" file="${BUILD_DIR}" type="dir"/>
            <then>
                <echo msg="Removing old files…"/>
                <delete includeemptydirs="true" verbose="false" failonerror="true">
                    <fileset dir="${BUILD_DIR}">
                        <include name="**"/>
                    </fileset>
                </delete>
            </then>
            <else>
                <echo msg="Creating build dir…"/>
                <mkdir dir="${BUILD_DIR}"/>
            </else>
        </if>
    </target>
    <target name="copy_files">
        <echo msg="Copying main files…"/>
        <copy todir="${BUILD_DIR}" includeemptydirs="true" verbose="false">
            <fileset dir=".">
                <include name="**"/>
                <exclude name="build.xml"/>
            </fileset>
        </copy>
    </target>

    <!-- Merges the current branch with a remote branch -->
    <target name="git-merge">
        <exec command="git rev-parse --abbrev-ref HEAD" outputProperty="CURRENT_BRANCH"/>
        <input message="Your current branch is '${CURRENT_BRANCH}'. Remote branch: " propertyName="BRANCH"/>
        <gitbranch branchname="temp" repository="."/>
        <gitcheckout repository="." branchname="temp"/>
        <gitpull repository="." refspec="${BRANCH}" quiet="false"/>
        <gitcheckout repository="." branchname="${CURRENT_BRANCH}"/>
        <gitmerge repository="." remote="temp"/>
        <gitbranch branchname="temp" repository="." delete="true"/>
    </target>

    <!-- Merges the current branch with a remote branch in two steps: step 1 -->
    <target name="git-merge1">
        <exec command="git rev-parse --abbrev-ref HEAD" outputProperty="CURRENT_BRANCH" checkreturn="true"/>
        <exec command="git fetch -p" passthru="true" checkreturn="true"/>
        <input message="Your current branch is '${CURRENT_BRANCH}'. Remote branch: " propertyName="BRANCH"/>
        <gitbranch branchname="temp" repository="."/>
        <gitcheckout repository="." branchname="temp"/>
        <gitpull repository="." refspec="${BRANCH}" quiet="false"/>
    </target>

    <!-- Merges the current branch with a remote branch in two steps: step 2 -->
    <target name="git-merge2">
        <exec command="git rev-parse --abbrev-ref HEAD" outputProperty="CURRENT_BRANCH" checkreturn="true"/>
        <input message="Your current branch is '${CURRENT_BRANCH}'. Branch: " propertyName="BRANCH"/>
        <gitcheckout repository="." branchname="${BRANCH}"/>
        <gitmerge repository="." remote="temp"/>
        <gitbranch branchname="temp" repository="." delete="true"/>
    </target>

    <!-- Makes a new version/release.  -->
    <target name="version" depends="build">
        <readSemanticVersion file=".version"
                             versionProperty="VERSION"
                             haltOnError="true"/>
        <gitcommit repository="." message="Release: ${VERSION}" allFiles="true"/>
        <gitpush repository="."/>
        <gittag repository="." name="${VERSION}"/>
        <gitpush repository="." refspec="${VERSION}" quiet="false"/>
    </target>
</project>
