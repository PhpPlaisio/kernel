/**
 * Inserts a new page.
 *
 * @param p_wrd_id      The ID of the word of the page title.
 * @param p_ptb_id      The ID of the page tab to which the page belongs (optional).
 * @param p_pag_id_org  The ID of master page of the new page (optional).
 * @param p_mnu_id      The ID menu associated with the new page.
 * @param p_pag_alias   The alias of the new page.
 * @param p_pag_class   The class of the new page.
 * @param p_pag_label   The label of the new page.
 * @param p_pag_weight  The weight of the page inside a page group.
 */
create procedure abc_system_page_insert_details( in p_wrd_id       @bbl_word.wrd_id%type@,
                                                 in p_ptb_id       @aut_page_tab.ptb_id%type@,
                                                 in p_pag_id_org   @aut_page.pag_id%type@,
                                                 in p_mnu_id       @aut_menu.mnu_id%type@,
                                                 in p_pag_alias    @aut_page.pag_alias%type@,
                                                 in p_pag_class    @aut_page.pag_class%type@,
                                                 in p_pag_label    @aut_page.pag_label%type@,
                                                 in p_pag_weight   @aut_page.pag_weight%type@ )
modifies sql data
-- type: singleton1
begin
  declare l_pag_id @aut_page.pag_id%type@;

  insert into AUT_PAGE( wrd_id
  ,                     ptb_id
  ,                     pag_id_org
  ,                     mnu_id
  ,                     pag_alias
  ,                     pag_class
  ,                     pag_label
  ,                     pag_weight )
  values( p_wrd_id
  ,       p_ptb_id
  ,       p_pag_id_org
  ,       p_mnu_id
  ,       p_pag_alias
  ,       p_pag_class
  ,       p_pag_label
  ,       p_pag_weight );

  set l_pag_id = last_insert_id();

  if p_ptb_id is not null and p_pag_id_org is null then
    update AUT_PAGE
    set    pag_id_org = l_pag_id
    where  pag_id = l_pag_id
    ;
  end if;

  select l_pag_id pag_id
  ;
end
